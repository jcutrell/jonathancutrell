import SiteLayout from '../../components/SiteLayout'
import { Wrap } from '../../components/shared'
import Link from 'next/link'
import Footer from '../../components/footer'

const PodcastEpisodeTemplate = (props) => {
  const { episode } = props
  const siteTitle = episode.title

  return (
    <SiteLayout location={props.location} title={siteTitle}>
      <Wrap>
        <Link href="/episodes">&larr; Back to All Episodes</Link>
        <h1>{episode.title}</h1>
        <iframe
          height="200px"
          width="100%"
          frameBorder="no"
          scrolling="no"
          seamless
          tw={'pt-2 pb-2 my-6'}
          src={`https://player.simplecast.com/${episode.id}?dark=false`}
        ></iframe>
        <hr />
        <div dangerouslySetInnerHTML={{ __html: episode.result }} />
        <details open tw={'bg-gray-200 rounded-md p-4 mb-4 mt-4'}>
          <summary tw={'font-bold text-lg text-gray-700 cursor-pointer text-2'}>
            Transcript (Generated by OpenAI Whisper)
          </summary>
          <div
            tw={'text-gray-600'}
            dangerouslySetInnerHTML={{
              __html:
                episode.transcription ||
                'No transcript has been provided for this episode yet.',
            }}
          />
        </details>
        <Footer />
      </Wrap>
    </SiteLayout>
  )
}

export default PodcastEpisodeTemplate

export async function getStaticPaths() {
  // If API credentials are not available, return empty paths
  if (!process.env.PODCAST_ID || !process.env.SIMPLECAST_API_KEY) {
    return {
      paths: [],
      fallback: false,
    }
  }

  const res = await fetch(
    `https://api.simplecast.com/podcasts/${process.env.PODCAST_ID}/episodes?limit=1500&offset=0`,
    {
      headers: {
        authorization: `Bearer ${process.env.SIMPLECAST_API_KEY}`,
      },
    }
  )
  const episodes = await res.json()

  // Handle API errors or missing data
  if (!episodes.collection || !Array.isArray(episodes.collection)) {
    console.warn('Failed to fetch episodes from Simplecast API')
    return {
      paths: [],
      fallback: false,
    }
  }

  return {
    paths: episodes.collection.map((ep) => `/episodes/${ep.id}`),
    fallback: false,
  }
}

export async function getStaticProps(context) {
  const episode_id = context.params.id
  const res = await fetch(`https://api.simplecast.com/episodes/${episode_id}`, {
    headers: {
      authorization: `Bearer ${process.env.SIMPLECAST_API_KEY}`,
    },
  })
  const episode = await res.json()

  const result = episode.long_description || episode.description || '<div />'

  //episode.mdxSource = await serialize(result, { parseFrontmatter: false });
  episode.result = result

  return {
    props: {
      episode,
    },
  }
}
